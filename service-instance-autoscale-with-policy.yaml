heat_template_version: 2015-04-30

description: Autoscaling Contrail Service Instance HOT

parameters:
  service_template_name:
    type: string
    label: Service template fq name
    description: Service template for port tuple
  service_template_properties_version:
    type: string
    description: Indicates service version
  service_template_properties_service_mode:
    type: string
    description: service mode
  service_template_properties_service_type:
    type: string
    description: service type
  service_template_properties_image_name:
    type: string
    description: Name of the image
  service_template_properties_flavor:
    type: string
    description: Flavor
  service_template_properties_availability_zone:
    type: string
    description: Availability zone
  service_template_properties_ordered_interfaces:
    type: string
    description: Indicates service interfaces are ordered
  service_template_properties_interface_type_service_interface_type_1:
    type: string
    description: service_interface_type for the ServiceTemplate
  service_template_properties_interface_type_service_interface_type_2:
    type: string
    description: service_interface_type for the ServiceTemplate
  service_template_properties_interface_type_service_interface_type_3:
    type: string
    description: service_interface_type for the ServiceTemplate
  service_template_properties_service_scaling:
    type: string
    description: Indicates whether service scaling is enabled
  service_template_properties_availability_zone_enable:
    type: string
    description: Indicates availability zone is enabled
  service_template_properties_service_virtualization_type:
    type: string
    description: Indicates virtualization type

  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_1:
    type: string
    description: subnet prefix for management network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_1:
    type: string
    description: subnet prefix len for management network
  network_ipam_refs_data_ipam_subnets_default_gateway_1:
    type: string
    description: default gateway for management network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_2:
    type: string
    description: subnet prefix for left network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_2:
    type: string
    description: subnet prefix len for left network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_3:
    type: string
    description: subnet prefix for right network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_3:
    type: string
    description: subnet prefix len for right network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_4:
    type: string
    description: subnet prefix for left client network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_4:
    type: string
    description: subnet prefix len for left client network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_5:
    type: string
    description: subnet prefix for right client network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_5:
    type: string
    description: subnet prefix len for right client network
  
  policy_name_1:
    type: string
    description: sfc policy name
  network_policy_entries_policy_rule_direction_1:
    type: string
    description: sfc policy direction
  network_policy_entries_policy_rule_protocol_1:
    type: string
    description: sfc policy protocol
  network_policy_entries_policy_rule_action_list_simple_action_1:
    type: string
    description: sfc policy action

  service_instance_name:
    type: string
    label: Service instance name
    description: Service instance for port tuple
  service_instance_fq_name:
    type: string
    label: Service instance fq name
    description: Service instance for port tuple
  management_network:
    type: string
    description: Name of management network
  management_network_fqdn:
    type: string
    description: Fully-qualified Domain Name of management network
  left_network:
    type: string
    description: Name of left network
  left_network_fqdn:
    type: string
    description: Fully-qualified Domain Name of left network
  right_network:
    type: string
    description: Name of right network
  right_network_fqdn:
    type: string
    description: Fully-qualified Domain Name of right network
  left_client_network:
    type: string
    description: Name of left network
  left_client_network_fqdn:
    type: string
    description: Fully-qualified Domain Name of left client network
  right_client_network:
    type: string
    description: Name of right network
  right_client_network_fqdn:
    type: string
    description: Fully-qualified Domain Name of right client network
  domain:
    type: string
    description: Name of the Domain
  port_tuple_name:
    type: string
    description: name of Port Tuple

  client_instance_properties_image_name:
    type: string
    description: Name of the image
  client_instance_properties_flavor:
    type: string
    description: Flavor
  left_client_instance_properties_availability_zone:
    type: string
    description: Availability zone
  right_client_instance_properties_availability_zone:
    type: string
    description: Availability zone

  ecmp_hashing_include_fields_hashing_configured:
    type: boolean
    description: When True, Packet header fields used in calculating ECMP hash is decided by following flags
  ecmp_hashing_include_fields_source_ip:
    type: boolean
    description: When false, do not use source ip in the ECMP hash calculation
  ecmp_hashing_include_fields_destination_ip:
    type: boolean
    description: When false, do not use destination ip in the ECMP hash calculation
  ecmp_hashing_include_fields_ip_protocol:
    type: boolean
    description: When false, do not use ip protocol in the ECMP hash calculation
  ecmp_hashing_include_fields_source_port:
    type: boolean
    description: When false, do not use source port in the ECMP hash calculation
  ecmp_hashing_include_fields_destination_port:
    type: boolean
    description: When false, do not use destination port in the ECMP hash calculation

  autoscaling_instance_group_desired_capacity:
    type: number
    description: Number of initial service instance VMs

resources:
  template_NetworkIpam_1:
    type: OS::ContrailV2::NetworkIpam
    properties:
      name: { get_param: management_network }

  template_NetworkIpam_2:
    type: OS::ContrailV2::NetworkIpam
    properties:
      name: { get_param: left_network }
  
  template_NetworkIpam_3:
    type: OS::ContrailV2::NetworkIpam
    properties:
      name: { get_param: right_network }

  template_NetworkIpam_4:
    type: OS::ContrailV2::NetworkIpam
    properties:
      name: { get_param: left_client_network }

  template_NetworkIpam_5:
    type: OS::ContrailV2::NetworkIpam
    properties:
      name: { get_param: right_client_network }

  template_NetworkPolicy_1:
    type: OS::ContrailV2::NetworkPolicy
    properties:
      name: { get_param: policy_name_1 }
      network_policy_entries: { 
        network_policy_entries_policy_rule: [{
          network_policy_entries_policy_rule_direction: { get_param: network_policy_entries_policy_rule_direction_1 },
          network_policy_entries_policy_rule_protocol: { get_param: network_policy_entries_policy_rule_protocol_1 },
          network_policy_entries_policy_rule_dst_addresses: [{
            network_policy_entries_policy_rule_dst_addresses_virtual_network: { get_param: right_client_network_fqdn }
          }],
          network_policy_entries_policy_rule_src_addresses: [{
            network_policy_entries_policy_rule_src_addresses_virtual_network: { get_param: left_client_network_fqdn },
          }],
          network_policy_entries_policy_rule_action_list: {
            network_policy_entries_policy_rule_action_list_simple_action: { get_param: network_policy_entries_policy_rule_action_list_simple_action_1 },
            network_policy_entries_policy_rule_action_list_apply_service: [{ get_param: service_instance_fq_name }] 
          }
        }]
      }

  template_VirtualNetwork_1:
    type: OS::ContrailV2::VirtualNetwork
    depends_on: [ template_NetworkIpam_1 ]
    properties:
      name: { get_param: management_network }
      network_ipam_refs: [{ get_resource: template_NetworkIpam_1 }]
      network_ipam_refs_data:
        [{
          network_ipam_refs_data_ipam_subnets:
            [{
              network_ipam_refs_data_ipam_subnets_subnet:
                {
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_1 },
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_1 },
                },
              network_ipam_refs_data_ipam_subnets_default_gateway: { get_param: network_ipam_refs_data_ipam_subnets_default_gateway_1 }
            }]
         }]

  template_VirtualNetwork_2:
    type: OS::ContrailV2::VirtualNetwork
    depends_on: [ template_NetworkIpam_2 ]
    properties:
      name: { get_param: left_network }
      network_ipam_refs: [{ get_resource: template_NetworkIpam_2 }]
      network_ipam_refs_data:
        [{
          network_ipam_refs_data_ipam_subnets:
            [{
              network_ipam_refs_data_ipam_subnets_subnet:
                {
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_2 },
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_2 },
                },
            }]
         }]

  template_VirtualNetwork_3:
    type: OS::ContrailV2::VirtualNetwork
    depends_on: [ template_NetworkIpam_3 ]
    properties:
      name: { get_param: right_network }
      network_ipam_refs: [{ get_resource: template_NetworkIpam_3 }]
      network_ipam_refs_data:
        [{
          network_ipam_refs_data_ipam_subnets:
            [{
              network_ipam_refs_data_ipam_subnets_subnet:
                {
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_3 },
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_3 },
                },
            }]
         }]

  template_VirtualNetwork_4:
    type: OS::ContrailV2::VirtualNetwork
    depends_on: [ template_NetworkIpam_4, template_NetworkPolicy_1 ]
    properties:
      name: { get_param: left_client_network }
      network_ipam_refs: [{ get_resource: template_NetworkIpam_4 }]
      network_ipam_refs_data:
        [{
          network_ipam_refs_data_ipam_subnets:
            [{
              network_ipam_refs_data_ipam_subnets_subnet:
                {
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_4 },
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_4 },
                },
            }]
         }]

  template_VirtualNetwork_5:
    type: OS::ContrailV2::VirtualNetwork
    depends_on: [ template_NetworkIpam_5, template_NetworkPolicy_1 ]
    properties:
      name: { get_param: right_client_network }
      network_ipam_refs: [{ get_resource: template_NetworkIpam_5 }]
      network_ipam_refs_data:
        [{
          network_ipam_refs_data_ipam_subnets:
            [{
              network_ipam_refs_data_ipam_subnets_subnet:
                {
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_5 },
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_5 },
                },
            }]
         }]

  left_client_instance:
    type: OS::Nova::Server
    depends_on: [ template_VirtualNetwork_4 ]
    properties:
      name: 'left-client'
      image: { get_param:  client_instance_properties_image_name }
      flavor: { get_param: client_instance_properties_flavor }
      availability_zone: { get_param: left_client_instance_properties_availability_zone }
      networks:
        - network: { get_resource: template_VirtualNetwork_4 }
      user_data_format: RAW
      user_data: |
        #!/bin/sh
        echo -e "a\na" | passwd root

  right_client_instance:
    type: OS::Nova::Server
    depends_on: [ template_VirtualNetwork_5 ]
    properties:
      name: 'right-client'
      image: { get_param:  client_instance_properties_image_name }
      flavor: { get_param: client_instance_properties_flavor }
      availability_zone: { get_param: right_client_instance_properties_availability_zone }
      networks:
        - network: { get_resource: template_VirtualNetwork_5 }
      user_data_format: RAW
      user_data: |
        #!/bin/sh
        echo -e "a\na" | passwd root

  template_ServiceTemplate:
    type: OS::ContrailV2::ServiceTemplate
    properties:
      name: { get_param: service_template_name }
      service_template_properties:
        {
          service_template_properties_version: { get_param: service_template_properties_version },
          service_template_properties_service_mode: { get_param: service_template_properties_service_mode },
          service_template_properties_service_type: { get_param: service_template_properties_service_type },
          service_template_properties_image_name: { get_param: service_template_properties_image_name },
          service_template_properties_service_scaling: { get_param: service_template_properties_service_scaling },
          service_template_properties_interface_type:
            [
              {
                service_template_properties_interface_type_service_interface_type: { get_param: service_template_properties_interface_type_service_interface_type_1 },
              },
              {
                service_template_properties_interface_type_service_interface_type: { get_param: service_template_properties_interface_type_service_interface_type_2 },
              },
              {
                service_template_properties_interface_type_service_interface_type: { get_param: service_template_properties_interface_type_service_interface_type_3 },
              }
            ],
          service_template_properties_flavor: { get_param: service_template_properties_flavor },
          service_template_properties_ordered_interfaces: { get_param: service_template_properties_ordered_interfaces },
          service_template_properties_service_virtualization_type: { get_param: service_template_properties_service_virtualization_type },
          service_template_properties_availability_zone_enable: { get_param: service_template_properties_availability_zone_enable },
        }
      domain: { get_param: domain }

  template_ServiceInstance:
    type: OS::ContrailV2::ServiceInstance
    depends_on: [ template_ServiceTemplate ]
    properties:
      name: { get_param: service_instance_name }
      service_instance_properties:
        {
          service_instance_properties_interface_list:
            [
              {
                service_instance_properties_interface_list_virtual_network:
                  {
                     list_join: [':', { get_attr: [ template_VirtualNetwork_1, fq_name ] } ]
                  },
              },
              {
                service_instance_properties_interface_list_virtual_network:
                  {
                     list_join: [':', { get_attr: [ template_VirtualNetwork_2, fq_name ] } ]
                  },
              },
              {
                service_instance_properties_interface_list_virtual_network:
                  {
                     list_join: [':', { get_attr: [ template_VirtualNetwork_3, fq_name ] } ]
                  },
              }
            ],
        }
      service_template_refs: [{ get_resource: template_ServiceTemplate }]

  instance_group:
    type: OS::Heat::AutoScalingGroup
    properties:
      cooldown: 60
      desired_capacity: { get_param: autoscaling_instance_group_desired_capacity }
      max_size: 4
      min_size: 1
      resource:
        type: service-instance-autoscale-depends.yaml
        properties:
          image: { get_param: service_template_properties_image_name }
          flavor: { get_param: service_template_properties_flavor }
          availability_zone: { get_param: service_template_properties_availability_zone }
          virtual_network_1: { get_param: management_network }
          virtual_network_1_fqdn: { list_join: [':', { get_attr: [ template_VirtualNetwork_1, fq_name ] } ] }
          virtual_network_2: { get_param: left_network }
          virtual_network_2_fqdn: { list_join: [':', { get_attr: [ template_VirtualNetwork_2, fq_name ] } ] }
          virtual_network_3: { get_param: right_network }
          virtual_network_3_fqdn: { list_join: [':', { get_attr: [ template_VirtualNetwork_3, fq_name ] } ] }
          service_instance_name: { list_join: [':', { get_attr: [ template_ServiceInstance, fq_name ] } ] }
          service_interface_type_1: { get_param: service_template_properties_interface_type_service_interface_type_1 }
          service_interface_type_2: { get_param: service_template_properties_interface_type_service_interface_type_2 }
          service_interface_type_3: { get_param: service_template_properties_interface_type_service_interface_type_3 }
          port_tuple_name: { get_param: port_tuple_name }
          ecmp_hashing_include_fields_hashing_configured: { get_param: ecmp_hashing_include_fields_hashing_configured }
          ecmp_hashing_include_fields_source_ip: { get_param: ecmp_hashing_include_fields_source_ip }
          ecmp_hashing_include_fields_destination_ip: { get_param: ecmp_hashing_include_fields_destination_ip }
          ecmp_hashing_include_fields_ip_protocol: { get_param: ecmp_hashing_include_fields_ip_protocol }
          ecmp_hashing_include_fields_source_port: { get_param: ecmp_hashing_include_fields_source_port }
          ecmp_hashing_include_fields_destination_port: { get_param: ecmp_hashing_include_fields_destination_port }
          mgmt_gateway: { get_param: network_ipam_refs_data_ipam_subnets_default_gateway_1 }
          wc_notify: { get_attr: [wait_handle, curl_cli] }

  wait_condition:
    type: OS::Heat::WaitCondition
    depends_on: instance_group
    properties: 
      count: { get_param: autoscaling_instance_group_desired_capacity } 
      handle: { get_resource: wait_handle }
      timeout: 300

  wait_handle:
    type: OS::Heat::WaitConditionHandle

  attach_policy_1:
    type: OS::Contrail::AttachPolicy
    depends_on: wait_condition
    properties: 
      network: { get_resource: template_VirtualNetwork_4}
      policy: { get_resource: template_NetworkPolicy_1 }

  attach_policy_2:
    type: OS::Contrail::AttachPolicy
    depends_on: wait_condition
    properties: 
      network: { get_resource: template_VirtualNetwork_5}
      policy: { get_resource: template_NetworkPolicy_1 }

  scaleup_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: instance_group }
      cooldown: 60
      scaling_adjustment: 1

  scaledown_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: instance_group }
      cooldown: 60
      scaling_adjustment: -1

outputs:

  scaleup_policy_signal_url:
    value: { get_attr: [scaleup_policy, signal_url] }

  scaledown_policy_signal_url:
    value: { get_attr: [scaledown_policy, signal_url] }

